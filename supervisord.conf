[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisord.log
loglevel=info

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

# RabbitMQ Server
[program:rabbitmq]
command=/app/init_rabbitmq.sh
autostart=true
autorestart=unexpected
environment=RMQ_USER="%(ENV_RMQ_USER)s",RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s"
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

# LLM Backend
[program:llm_backend]
command=/root/miniforge3/envs/myenv/bin/python /app/init_llm.py
autostart=true
autorestart=unexpected
stdout_logfile=/var/log/llm_backend.log
stderr_logfile=/var/log/llm_backend.err.log

# Gateway
[program:gateway]
command=/root/miniforge3/envs/myenv/bin/python /app/node/server/server.py
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    HUB_ROOT_USER="%(ENV_HUB_ROOT_USER)s",
    HUB_ROOT_PASS="%(ENV_HUB_ROOT_PASS)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s",
    DB_ROOT_USER="%(ENV_DB_ROOT_USER)s",
    DB_ROOT_PASS="%(ENV_DB_ROOT_PASS)s",
stdout_logfile=/var/log/gateway.log
stderr_logfile=/var/log/gateway.err.log

# Celery
[program:celery]
command=/bin/bash /app/celery_worker_start_docker.sh
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    HUB_ROOT_USER="%(ENV_HUB_ROOT_USER)s",
    HUB_ROOT_PASS="%(ENV_HUB_ROOT_PASS)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s",
    DB_ROOT_USER="%(ENV_DB_ROOT_USER)s",
    DB_ROOT_PASS="%(ENV_DB_ROOT_PASS)s",
stdout_logfile=/var/log/celery.log
stderr_logfile=/var/log/celery.err.log

# Ollama
[program:ollama]
command=ollama serve
autostart=true
autorestart=true
stdout_logfile=/var/log/ollama.log
stderr_logfile=/var/log/ollama.err.log
priority=10