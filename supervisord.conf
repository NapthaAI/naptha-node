[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisord.log
loglevel=info

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[program:rabbitmq]
command=bash -c "RABBITMQ_NODE_PORT=5672 rabbitmq-server -detached && sleep 10 && rabbitmqctl wait --timeout 60 && rabbitmqctl add_user %(ENV_RMQ_USER)s %(ENV_RMQ_PASSWORD)s && rabbitmqctl set_user_tags %(ENV_RMQ_USER)s administrator && rabbitmqctl set_permissions -p / %(ENV_RMQ_USER)s '.*' '.*' '.*' && tail -f /dev/null"
autostart=true
autorestart=unexpected
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:llm_backend]
command=/root/miniforge3/envs/myenv/bin/python /app/init_llm.py
autostart=true
autorestart=unexpected
stdout_logfile=/var/log/llm_backend.log
stderr_logfile=/var/log/llm_backend.err.log
environment=
    LLM_BACKEND="%(ENV_LLM_BACKEND)s",
    OLLAMA_MODELS="%(ENV_OLLAMA_MODELS)s",
    VLLM_MODEL="%(ENV_VLLM_MODEL)s"

[program:gateway]
command=/root/miniforge3/envs/myenv/bin/python /app/node/server/server.py
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    NODE_TYPE="%(ENV_NODE_TYPE)s",
    NODE_IP="%(ENV_NODE_IP)s",
    NODE_PORT="%(ENV_NODE_PORT)s",
    NODE_ROUTING="%(ENV_NODE_ROUTING)s",
    BASE_OUTPUT_DIR="%(ENV_BASE_OUTPUT_DIR)s",
    OLLAMA_MODELS="%(ENV_OLLAMA_MODELS)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    AGENTS_SOURCE_DIR="%(AGENTS_SOURCE_DIR)s",
    IPFS_GATEWAY_URL="%(ENV_IPFS_GATEWAY_URL)s",
    DOCKER_JOBS="%(ENV_DOCKER_JOBS)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    CELERY_BROKER_URL="%(ENV_CELERY_BROKER_URL)s",
    LOCAL_HUB="%(ENV_LOCAL_HUB)s", 
    LOCAL_HUB_URL="%(ENV_LOCAL_HUB_URL)s",
    PUBLIC_HUB_URL="%(ENV_PUBLIC_HUB_URL)s",
    HUB_NS="%(ENV_HUB_NS)s",
    HUB_DB="%(ENV_HUB_DB)s",
    HUB_DB_PORT="%(ENV_HUB_DB_PORT)s",
    HUB_ROOT_USER="%(ENV_HUB_ROOT_USER)s",
    HUB_ROOT_PASS="%(ENV_HUB_ROOT_PASS)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s",
    SURREALDB_PORT="%(ENV_SURREALDB_PORT)s",
    DB_NS="%(ENV_DB_NS)s",
    DB_DB="%(ENV_DB_DB)s",
    DB_URL="%(ENV_DB_URL)s",
    DB_ROOT_USER="%(ENV_DB_ROOT_USER)s",
    DB_ROOT_PASS="%(ENV_DB_ROOT_PASS)s",
    LLM_BACKEND="%(ENV_LLM_BACKEND)s"
stdout_logfile=/var/log/gateway.log
stderr_logfile=/var/log/gateway.err.log

[program:celery]
command=/bin/bash /app/celery_worker_start_docker.sh
directory=/app
autostart=true
autorestart=true
environment=
    PRIVATE_KEY="%(ENV_PRIVATE_KEY)s",
    NODE_TYPE="%(ENV_NODE_TYPE)s",
    NODE_IP="%(ENV_NODE_IP)s",
    NODE_PORT="%(ENV_NODE_PORT)s",
    NODE_ROUTING="%(ENV_NODE_ROUTING)s",
    BASE_OUTPUT_DIR="%(ENV_BASE_OUTPUT_DIR)s",
    OLLAMA_MODELS="%(ENV_OLLAMA_MODELS)s",
    OPENAI_API_KEY="%(ENV_OPENAI_API_KEY)s",
    STABILITY_API_KEY="%(ENV_STABILITY_API_KEY)s",
    AGENTS_SOURCE_DIR="%(ENV_AGENTS_SOURCE_DIR)s",
    IPFS_GATEWAY_URL="%(ENV_IPFS_GATEWAY_URL)s",
    DOCKER_JOBS="%(ENV_DOCKER_JOBS)s",
    RMQ_USER="%(ENV_RMQ_USER)s",
    RMQ_PASSWORD="%(ENV_RMQ_PASSWORD)s",
    CELERY_BROKER_URL="%(ENV_CELERY_BROKER_URL)s",
    LOCAL_HUB="%(ENV_LOCAL_HUB)s",
    LOCAL_HUB_URL="%(ENV_LOCAL_HUB_URL)s",
    PUBLIC_HUB_URL="%(ENV_PUBLIC_HUB_URL)s",
    HUB_NS="%(ENV_HUB_NS)s",
    HUB_DB="%(ENV_HUB_DB)s",
    HUB_DB_PORT="%(ENV_HUB_DB_PORT)s",
    HUB_ROOT_USER="%(ENV_HUB_ROOT_USER)s",
    HUB_ROOT_PASS="%(ENV_HUB_ROOT_PASS)s",
    HUB_USERNAME="%(ENV_HUB_USERNAME)s",
    HUB_PASSWORD="%(ENV_HUB_PASSWORD)s",
    SURREALDB_PORT="%(ENV_SURREALDB_PORT)s",
    DB_NS="%(ENV_DB_NS)s",
    DB_DB="%(ENV_DB_DB)s",
    DB_URL="%(ENV_DB_URL)s",
    DB_ROOT_USER="%(ENV_DB_ROOT_USER)s",
    DB_ROOT_PASS="%(ENV_DB_ROOT_PASS)s",
    LLM_BACKEND="%(ENV_LLM_BACKEND)s"
stdout_logfile=/var/log/celery.log
stderr_logfile=/var/log/celery.err.log

[program:ollama]
command=ollama serve
autostart=true
autorestart=true
stdout_logfile=/var/log/ollama.log
stderr_logfile=/var/log/ollama.err.log
priority=10  # This ensures Ollama starts before dependent services