# This version of the node dockerfile includes the SurrealDB CLI utilities, and includes initialization for surrealdb
FROM condaforge/miniforge3:24.9.2-0

WORKDIR /app
COPY . .

# use bash instead of sh
SHELL ["/bin/bash", "-c"]

# install deps
RUN apt-get update
RUN apt-get install gcc curl git libpq-dev -y

# add conda install to path; use base environment
ENV PATH="/opt/conda/bin:${PATH}"
RUN conda create -y -n node python=3.12
RUN echo "source activate node" > /root/.bashrc
ENV PATH="/opt/conda/envs/node/bin:$PATH"

# install postgres (required for building psycopg2 from source)
RUN conda install -y conda-forge::postgresql=17.2
ENV LDFLAGS="-L/opt/conda/lib"
ENV CPPFLAGS="-I/opt/conda/include"

# Install uv using the official installer and find where it's installed
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
RUN find / -name uv -type f 2>/dev/null || echo "uv not found"
RUN find / -name .cargo -type d 2>/dev/null

# Try adding common locations to PATH
ENV PATH="/root/.cargo/bin:/root/.local/bin:/usr/local/bin:${PATH}"

# Create venv using Python's built-in venv as a fallback
RUN python -m venv .venv

# Install dependencies with pip
RUN .venv/bin/python -c "import sys; from urllib.request import urlopen; exec(urlopen('https://bootstrap.pypa.io/get-pip.py').read())"
RUN .venv/bin/pip install -e .

# install surrealDB so that we have the command line tool
RUN curl -sSf https://install.surrealdb.com | sh

EXPOSE 7001 7002

# run db migrations / config & server
CMD (uv run -m node.storage.db.init_db | tee /dev/stdout) && \
    (uv run -m node.storage.hub.init_hub | tee /dev/stdout) && \
    (uv run -m node.storage.hub.init_hub --user | tee /dev/stdout) && \
    ((uv run -m celery -A node.worker.main:app worker --loglevel=info | tee /dev/stdout) & ) && \
    (uv run -m node.server.server --communication-protocol http --port 7001 | tee /dev/stdout) & \
    uv run -m node.server.server --communication-protocol ws --port 7002 | tee /dev/stdout